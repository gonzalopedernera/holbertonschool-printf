NAME
	_printf
​
​
SYNOPSIS
	#include "main.h"
	
	int _printf(const char *format, ...);
​
​
DESCRIPTION
	The function _printf() writes an output to stdout, the standard 
	output stream; The function writes the output under the control 
	of a format string that specifies how subsequent arguments (or 
	arguments accessed via the variable-length argument
	facilities of stdarg are converted to output.
​
Format of the format string
	The format string is a character string, beginning and ending in
	its initial shift state, if any.  The format string is composed
	of zero or more directives: ordinary characters (not %), which
	are copied unchanged to the output stream. Each conversion 
	specification is introduced by the character %, and ends with a 
	conversion specifier.
​
Conversion specifiers
	A character that specifies the type of conversion to be applied.
	The conversion specifiers and their meanings are:
​
d, i	The int argument is converted to signed decimal notation.
	
c 	The int argument is converted to a char, and the resulting
	character is written.
​
s	The const char * argument is expected to be a pointer to
	an array of character type (pointer to a string). Characters
	from the array are written up to (but not including) a terminating
	null byte ('\0').
​
% 	A '%' is written. No argument is converted. The complete 
	conversion specification is '%%'.
​
​
RETURN VALUE
​
	Upon succesful return, these functions return the number of
	characters printed (excluding the null byte used to end output to
	strings).
​
	If an output error ocurred, -1 is returned.
